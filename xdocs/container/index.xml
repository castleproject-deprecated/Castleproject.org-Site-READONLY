<?xml version="1.0"?>
<document order="0">
  <properties>
    <title>MicroKernel/Windsor</title>
  </properties>

  <body>

<intro>
<p>
<b>Castle MicroKernel</b> is an inversion of control container 
that was designed towards extensibility. It combines
facilities to grow orthogonally. These facilities work side-by-side, 
without interfering or depending on each other, to allow you to easily 
extend the container functionality by plugging in new concerns and semantics.
</p>

<p>
<table border="0" cellpadding="4">
<tr>
  <td><img relative="images/microkernel-med.png" /></td>
  <td>
  <b>Castle MicroKernel</b> is the core of 
  the embeddable inversion of control
  container Castle Project offers. You can use it as an embeddable container
  on tools that support extensions or plugin support, such 
  as tools which exposes configurable pipelines or compilers.
  The container is set up and configured through code.
  </td>
</tr>

<tr>
  <td><img relative="images/windsor-med.png" /></td>
  <td>
  <b>Castle Windsor</b> aggregates the <b>MicroKernel</b>
  and exposes a powerful configuration support. It is 
  suitable for common enterprise application needs.
  </td>
</tr>
</table>

</p>

</intro>

<section id="WhyWouldIUseIt">
<title>Why would I use it?</title>

<p>
The Castle MicroKernel and Castle Windsor are good options if you 
are fond of the Inversion of Control principle. This happens a lot
to developers that come from the Java camp.
</p>

<p>
The MicroKernel is undoubtably the most extensible container for .Net.
This is a high point as you can use it as the rendezvous for
frameworks your company has, combining them.
</p>

<p>
IoC containers favors reuse as they allow you to use a natural idiom
to expose the component's dependencies. This allow components to be used
with or without containers. Hence you quickly end up with a library of
reusable components that can be shared among projects, as long as you apply
the Separation of Concerns principle.
</p>

</section>

<section id="WhyWouldINotUseIt">
<title>Why would I not use it?</title>

<p>
You should not use an Inversion of Control container if you are
not familiar with the concepts and if you do not realize the problems
they try to solve. 
</p>

<p>
Also, depending on the size and complexity of the project, an IoC container
might be overkill. Prefer to use it on medium to large projects.
</p>

</section>

<section id="version">
<title>Version</title>

<p>
The latest Castle Inversion of Control package release is 1.0 Release Candidate 3.
</p>

</section>

<section>
	<title>Content</title>
	<p>
	The following pages compose the Castle MicroKernel/Windsor portion of this web site.
	</p>
	<sitemap select="castle/container"/>
</section>

</body>
</document>
