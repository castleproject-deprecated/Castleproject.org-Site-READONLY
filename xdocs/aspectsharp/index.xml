<?xml version="1.0"?>
<document>
  <properties>
    <title>Aspect#</title>
  </properties>

  <body>

<intro>
<p>
Aspect# is an AOP (Aspect Oriented Programming) 
framework for the CLI (.Net and Mono). It relies on DynamicProxy 
and offers a built-in language to declare and configure aspects, and is compliant with AopAlliance.
</p>

<p>
It became part of the Castle Project in June 2005.
</p>

</intro>

<section id="WhyWouldIUseIt">
<title>Why would I use it?</title>

<p>Aspect# promotes:
	<ul>
		<li>Separation of Concerns(SoC)</li>
		<li>Code reuse</li>
		<li>Decomposition.</li>
	</ul>
	
	And it offers, plus the basic AoP capabilities, Mixins and a Ruby like configuration language 
	making the framework flexible and easy to use.
</p>
</section>

<section id="WhyWouldINotUseIt">
<title>Why would I <b>not</b> use it?</title>

<p>
AOP is very powerful tool, but it can remove the predictability on your system design.
This might make bugs hard to find and life hard for newcomers.
</p>

<p>
It should be used to introduce cross cutting concerns only, and should definitely
not be overused.
</p>

</section>

<section>
	<title>Content</title>
	<p>
	The following pages compose the Aspect# portion of this web site.
	</p>
	<sitemap select="castle/aspectsharp"/>
</section>

</body>
</document>
