<?xml version="1.0"?>
<document order="2">
  <properties>
    <title>FAQ</title>
  </properties>

  <body>

<intro>
<p>
This page has a list of frequently asked questions.
</p>
</intro>

<section id="general">
	<title>General questions</title>

	<section>
		<title>May I extend the AspectEngine class?</title>

	<p>
		Certainly! Why not? You'll probably have to extend the AbstractEngineBuilder, though.
	</p>
	
	</section>

	<section>
		<title>Have you tested Aspect# against CLI 2.0?</title>

	<p>
		Whidbey Beta 1:

<pre>
Test started: Assembly: AspectSharp.Tests.dll
37 succeeded, 0 failed, 0 skipped, took 4.22 seconds.
</pre>
		
<pre>
Test started: Assembly: AspectSharp.Lang.Tests.dll
76 succeeded, 0 failed, 0 skipped, took 2.56 seconds.
</pre>

	</p>
	</section>

	<section>
		<title>Which assemblies are necessary in my project in order to benefit from Aspect#?</title>

	<p>
		<ul>
			<li>AspectSharp.dll</li>
			<li>AspectSharp.Lang.dll</li>
			<li>AopAlliance.dll</li>
			<li>Castle.DynamicProxy.dll</li>
			<li>antlr.runtime.dll</li>
		</ul>
	</p>
	
	</section>
	
	<section>
		<title>Is Aspect# able to do dynamic weaving, i.e. in contrary to static weaving decided at runtime whether an object shall have the given aspect or not?</title>

	<p>
		Not out of the box. You can have implement something like that using custom matchers, or if you need a more complex semantic you can join our mailing list and tell us what you have in mind :-)
	</p>
	
	</section>
	
	<section>
		<title>Aspect# and its dependent assemblies are under which licenses?</title>

	<p>
		ASL or compatible. Aspect# and Avalon.DynamicProxy are under Apache Software Foundation license which basically means you can do anything you want with the code. Antlr is under Terence Parr's license which, from our understanding, is compatible with ASL.
	</p>
	
	</section>
	
	<section>
		<title>Have you tested Aspect# against Mono?</title>

	<p>
		Yes. But due a bug in the Mono Runtime(a ldtoken issue) the tests are failing.
	</p>
	
	</section>
	
</section>


<section id="UsageQuestions">
	<title>Usage Questions</title>

	<section>
		<title>I'm getting a stack overflow in a specific situation. What's wrong?</title>

	<p>
	If your method interceptor invokes a method in the proxy object which is also intercepted by the same interceptor then you'll have a stack overflow. To prevent it:
<br/>
  Avoid invoking methods on the proxy object in the body of an interceptor, or if you do so, think ahead if you can possible be trapped by a stack overflow situation. Try to define specific pointcuts instead of more general ones. 
	</p>
	
	</section>
	
	<section>
		<title>I'm getting an awkward proxy error when I Wrap an specific class. What can possible be wrong?</title>

	<p>
	Check if your class' constructor is invoking a virtual method. This is a know bug and we plan to solve this before the beta release.
	</p>
	
	</section>
</section>

<section id="DesignQuestions">
	<title>Design Questions</title>

	<section>
		<title>How to introduce AOP in a more transparent way?</title>

	<p>You should use an inversion of control container or a similar approach
	to hide the components set up.</p>

	</section>
	
</section>

</body>
</document>
