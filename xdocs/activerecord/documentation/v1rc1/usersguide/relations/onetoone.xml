<?xml version="1.0"?>
<document order="4">
  <properties>
    <title>OneToOne</title>
  </properties>

  <body>

<intro>
<p>
The one-to-one implemented by NHibernate is often misunderstood.
It is used for classes that share primary keys and useful when you
have some kind of 
<a href="http://www.martinfowler.com/eaaCatalog/classTableInheritance.html">Class Table Inheritance</a>.
</p>

The primary key of the table which isn't autogenerated must be declared using <code>PrimaryKeyType.Foreign</code>:

<pre format="cs">
using Castle.ActiveRecord;

[ActiveRecord("Customer")]
public class Customer : ActiveRecordBase 
{
	private int custID;
	private string name;
	private CustomerAddress addr;
	
	[PrimaryKey]
	public int CustomerID 
	{
		get { return custID; }
		set { custID = value; }
	}
	
	[OneToOne]
	public CustomerAddress CustomerAddress 
	{
		get { return addr; }
		set { addr = value; }
	}
	
	[Property]
	public string Name 
	{
		get { return name; }
		set { name = value; }
	}
}

[ActiveRecord("CustomerAddress")]
public class CustomerAddress : ActiveRecordBase 
{
	private int custID;
	private string address;
	private Customer cust;

	[PrimaryKey(PrimaryKeyType.Foreign)]
	public int CustomerID 
	{
		get { return custID; }
		set { custID = value; }
	}
	
	[OneToOne]
	public Customer Customer 
	{
		get { return cust; }
		set { cust = value; }
	}
	
	[Property]
	public string Address 
	{
		get { return addr; }
		set { addr = value; }
	}
}
</pre>

<p>
You should read more about it on NHibernate documentation.
</p>

<p>
More information on the attribute can be found 
at <a href="../../manual/attributes.html">Attributes</a> article.
</p>

</intro>

</body>
</document>
