<?xml version="1.0"?>
<document order="27">
  <properties>
    <title>FieldAttribute</title>
    <notoc/>
  </properties>

  <body>

<intro>
<p>
 Maps a standard column of the table. 
</p>


</intro>

<section>
	<title>Example</title>
	
	<p> In the following example, the column is also called 'name', so you don't have to specify. </p><pre format="cs">
public class Blog : ActiveRecordBase
{
    [Field]
    string name;
    
    
</pre>
</section>


<section id="FieldAttribute_Constructors">
	<title>Constructors</title>

	<section>
	<title>FieldAttribute()</title>

<p>
 Initializes a new instance of the <tt>Castle.ActiveRecord.FieldAttribute</tt> class. 
</p>



	</section>
	<section>
	<title>FieldAttribute(System.String column)</title>

<p>
 Initializes a new instance of the <tt>Castle.ActiveRecord.FieldAttribute</tt> class. 
</p>


	<p>
	<table class="commontable">
	<tr>
		<th>Parameter</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><tt>column</tt></td>
		<td>
The column name.
		</td>
	</tr>
	</table>
	</p>

	</section>
	<section>
	<title>FieldAttribute(System.String column, System.String type)</title>

<p>
 Initializes a new instance of the <tt>Castle.ActiveRecord.FieldAttribute</tt> class. 
</p>


	<p>
	<table class="commontable">
	<tr>
		<th>Parameter</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><tt>column</tt></td>
		<td>
The column name
		</td>
	</tr>
	<tr>
		<td><tt>type</tt></td>
		<td>
The column type.
		</td>
	</tr>
	</table>
	</p>

	</section>
	
</section>



<section id="FieldAttribute_Properties">
	<title>Properties</title>

	<p>
	<table class="commontable">
	<tr>
		<th>Name</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><tt>NotNull</tt></td>
		<td>
 Gets or sets a value indicating whether the column allows null values 
		</td>
	</tr>
	<tr>
		<td><tt>Length</tt></td>
		<td>
 Gets or sets the length of this column. char(10), etc 
		</td>
	</tr>
	<tr>
		<td><tt>Column</tt></td>
		<td>
 Gets or sets the column name 
		</td>
	</tr>
	<tr>
		<td><tt>UniqueKey</tt></td>
		<td>
 From NHibernate documentation: A unique-key attribute can be used to group columns in a single unit key constraint. 
		</td>
	</tr>
	<tr>
		<td><tt>Index</tt></td>
		<td>
 From NHibernate documentation: specifies the name of a (multi-column) index 
		</td>
	</tr>
	<tr>
		<td><tt>SqlType</tt></td>
		<td>
 From NHibernate documentation: overrides the default column type 
		</td>
	</tr>
	<tr>
		<td><tt>Check</tt></td>
		<td>
 From NHibernate documentation: create an SQL check constraint on either column or table 
		</td>
	</tr>
	<tr>
		<td><tt>Update</tt></td>
		<td>
 Set to <c>false</c> to ignore this field when updating entities of this ActiveRecord class. 
		</td>
	</tr>
	<tr>
		<td><tt>Insert</tt></td>
		<td>
 Set to <c>false</c> to ignore this field when inserting entities of this ActiveRecord class. 
		</td>
	</tr>
	<tr>
		<td><tt>Unique</tt></td>
		<td>
 Gets or sets a value indicating whether this <tt>Castle.ActiveRecord.FieldAttribute</tt> is unique. 
		</td>
	</tr>
	<tr>
		<td><tt>Formula</tt></td>
		<td>
 Gets or sets the formula used to calculate this field 
		</td>
	</tr>
	<tr>
		<td><tt>ColumnType</tt></td>
		<td>
 Gets or sets the type of the column. 
		</td>
	</tr>
	<tr>
		<td><tt>Access</tt></td>
		<td>
 Gets or sets the access strategy for this property 
		</td>
	</tr>
	<tr>
		<td><tt>CustomAccess</tt></td>
		<td>
 Gets or sets the custom access strategy 
		</td>
	</tr>
	<tr>
		<td><tt>AccessString</tt></td>
		<td>
 Gets the access strategy string for NHibernate's mapping. 
		</td>
	</tr>
	</table>
	</p>

</section>



</body>
</document>
