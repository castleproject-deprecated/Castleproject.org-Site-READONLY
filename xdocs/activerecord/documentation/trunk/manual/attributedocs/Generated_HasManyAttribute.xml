<?xml version="1.0"?>
<document order="23">
  <properties>
    <title>HasManyAttribute</title>
    <notoc/>
  </properties>

  <body>

<intro>
<p>
 Maps a one to many association. 
</p>


</intro>

<section>
	<title>Example</title>
	
	<pre format="cs">
public class Blog : ActiveRecordBase
{
    ...
    
    [HasMany(typeof(Post), RelationType.Bag, Key="Posts", Table="Posts", Column="blogid")]
    public IList Posts
    {
        get { return _posts; }
        set { _posts = value; }
    }
</pre>
</section>


<section id="HasManyAttribute_Constructors">
	<title>Constructors</title>

	<section>
	<title>HasManyAttribute()</title>

<p>
 Initializes a new instance of the <tt>Castle.ActiveRecord.HasManyAttribute</tt> class. 
</p>



	</section>
	<section>
	<title>HasManyAttribute(System.Type mapType)</title>

<p>
 Initializes a new instance of the <tt>Castle.ActiveRecord.HasManyAttribute</tt> class. 
</p>


	<p>
	<table class="commontable">
	<tr>
		<th>Parameter</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><tt>mapType</tt></td>
		<td>
Type of the map.
		</td>
	</tr>
	</table>
	</p>

	</section>
	<section>
	<title>HasManyAttribute(System.Type mapType, System.String keyColumn, System.String table)</title>

<p>
 Initializes a new instance of the <tt>Castle.ActiveRecord.HasManyAttribute</tt> class. 
</p>


	<p>
	<table class="commontable">
	<tr>
		<th>Parameter</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><tt>mapType</tt></td>
		<td>
Type of items in this association
		</td>
	</tr>
	<tr>
		<td><tt>keyColumn</tt></td>
		<td>
The key column.
		</td>
	</tr>
	<tr>
		<td><tt>table</tt></td>
		<td>
The table.
		</td>
	</tr>
	</table>
	</p>

	</section>
	
</section>



<section id="HasManyAttribute_Properties">
	<title>Properties</title>

	<p>
	<table class="commontable">
	<tr>
		<th>Name</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><tt>ColumnKey</tt></td>
		<td>
 Gets or sets the key column name. 
		</td>
	</tr>
	<tr>
		<td><tt>CompositeKeyColumnKeys</tt></td>
		<td>
 Gets or sets the names of the column in composite key scenarios. 
		</td>
	</tr>
	<tr>
		<td><tt>RelationType</tt></td>
		<td>
 Gets or sets the type of the relation. 
		</td>
	</tr>
	<tr>
		<td><tt>MapType</tt></td>
		<td>
 Gets or sets the type of the map. 
		</td>
	</tr>
	<tr>
		<td><tt>Table</tt></td>
		<td>
 Gets or sets the table for this relation 
		</td>
	</tr>
	<tr>
		<td><tt>Schema</tt></td>
		<td>
 Gets or sets the schema for this relation (dbo., etc) 
		</td>
	</tr>
	<tr>
		<td><tt>Lazy</tt></td>
		<td>
 Gets or sets a value indicating whether this <tt>Castle.ActiveRecord.RelationAttribute</tt> is lazy. 
		</td>
	</tr>
	<tr>
		<td><tt>Inverse</tt></td>
		<td>
 Gets or sets a value indicating whether this <tt>Castle.ActiveRecord.RelationAttribute</tt> is inverse. 
		</td>
	</tr>
	<tr>
		<td><tt>Cascade</tt></td>
		<td>
 Gets or sets the cascade options for this <tt>Castle.ActiveRecord.RelationAttribute</tt>
		</td>
	</tr>
	<tr>
		<td><tt>OrderBy</tt></td>
		<td>
 Gets or sets the order by clause for this relation 
		</td>
	</tr>
	<tr>
		<td><tt>Where</tt></td>
		<td>
 Gets or sets the where clause for this relation 
		</td>
	</tr>
	<tr>
		<td><tt>Sort</tt></td>
		<td>
 Only used with sets 
		</td>
	</tr>
	<tr>
		<td><tt>Index</tt></td>
		<td>
 Only used with maps or list 
		</td>
	</tr>
	<tr>
		<td><tt>IndexType</tt></td>
		<td>
 Only used with maps 
		</td>
	</tr>
	<tr>
		<td><tt>Element</tt></td>
		<td>
 Use for simple types. 
		</td>
	</tr>
	<tr>
		<td><tt>Cache</tt></td>
		<td>
 Gets or sets the cache strategy to use for this property 
		</td>
	</tr>
	<tr>
		<td><tt>Access</tt></td>
		<td>
 Gets or sets the access strategy for this property 
		</td>
	</tr>
	<tr>
		<td><tt>CustomAccess</tt></td>
		<td>
 Gets or sets the custom access strategy 
		</td>
	</tr>
	<tr>
		<td><tt>AccessString</tt></td>
		<td>
 Gets the access strategy string for NHibernate's mapping. 
		</td>
	</tr>
	</table>
	</p>

</section>



</body>
</document>
