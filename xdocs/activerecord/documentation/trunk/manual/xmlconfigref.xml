<?xml version="1.0"?>
<document order="5">
  <properties>
    <title>Xml Configuration Reference</title>
  </properties>

  <body>

<intro>
<p>
The following is the definition of the expected xml schema. 
Differences regarding the how it must appear in a standalone xml file or in a configuration associated with an <tt>AppDomain</tt> (web.config for instance) are also explained below.
</p>

<pre format="html">
			<![CDATA[
<configuration>

	<activerecord 
		isWeb="true|false" 
		isDebug="true|false" 
		pluralizeTableNames="true|false"
		threadinfotype="custom thread info implementation"
		sessionfactoryholdertype="custom session holder implementation"
		namingstrategytype="custom namingstrategy implementation">

		<config
			database="MsSqlServer2000|MsSqlServer2005|MsSqlServer2008|SQLite|MySql|MySql5|Firebird|PostgreSQL|PostgreSQL81|PostgreSQL82|MsSqlCe|Oracle8i|Oracle9i|Oracle10g"
			connectionStringName="name of connection string in config">
			<!-- Any legal NHibernate parameter you want to specify or override its default value -->
		</config>

		<config type="Full Type name to Abstract Class that defines boundaries for different database">
			<add key="connection.driver_class"           value="NHibernate Driver" />
			<add key="dialect"                           value="NHibernate Dialect" />
			<add key="connection.provider"               value="NHibernate Connection Provider" />
      <!-- Use only one of the two attributes below -->
			<add key="connection.connection_string"      value="connection string" />
			<add key="connection.connection_string_name" value="name of connection string in config" />
		</config>
		
	</activerecord>

</configuration>]]>
</pre>

<p>
The following table explains the attributes.
</p>

<p>
  <table class="commontable">
<tr>
<th>Attribute</th>
<th align="center">Required?</th>
<th>Description</th>
</tr>

<tr>
<td>isWeb</td>
<td align="center">No</td>
<td>If ActiveRecord is running in a ASP.Net application, <strong>you must add this attribute with the value <tt>true</tt></strong></td>
</tr>
<tr>
<td>isDebug</td>
<td align="center">No</td>
<td>If <tt>true</tt> forces ActiveRecord to write the mappings to files. Useful for debugging
and to show NHibernate team when asking for help on their forum. The files are written to 
the <tt>bin</tt> folder.
</td>
</tr>

	  <tr>
		  <td>pluralizeTableNames</td>
		  <td align="center">No</td>
		  <td>
			  If <tt>true</tt>, ActiveRecord will infer the table names as 
			  plural of the entity name. Defaults to <tt>false</tt>.
		  </td>
	  </tr>

	  <tr>
<td>threadinfotype</td>
<td align="center">No</td>
<td>Full qualified type name to a custom implementation of <tt>IThreadScopeInfo</tt></td>
</tr>
<tr>
<td>sessionfactoryholdertype</td>
<td align="center">No</td>
<td>Full qualified type name to a custom implementation of <tt>ISessionFactoryHolder</tt></td>
</tr>
<tr>
<td>namingstrategytype</td>
<td align="center">No</td>
<td>Full qualified type name to a custom implementation of <tt>INamingStrategy</tt>. 
This is a NHibernate interface</td>
</tr>
<tr>
<td>type (on config node)</td>
<td align="center">No</td>
<td>Only required if more than one config node is present. Should be a fully 
qualified type name to an abstract class that extends ActiveRecordBase and defines 
the boundaries to a different database</td>
</tr>
<tr>
<td>database (on config node)</td>
<td align="center">No*</td>
<td>Optional shortcut attribute that populates configuration with default values for chosed database.
The defaults can be overriden. When used, 'connectionStringName' must also be specified.
Alternatively a shorter version of this attribute - 'db' can be used.</td>
</tr>
<tr>
<td>connectionStringName (on config node)</td>
<td align="center">No*</td>
<td>Name of connection string in config to use. When used, 'database' must also be specified.
Alternatively a shorter version of this attribute - 'csn' can be used.</td>
</tr>
</table>
</p>

<p>
The NHibernate config elements are rather static and can be used from the examples below.
The only element to pay attention to is the connection information. There are two possibilities
two specify how to connect to the database:
<ul>
<li>Adding a connection string using the key <tt>connection.connection_string</tt></li>
<li>Using a predefined named connection string by specifying <tt>connection.connection_string_name</tt></li>
</ul>
Using the latter allows to use a connection string that is set in the <tt>connectionStrings</tt>-section 
of <tt>app.config</tt> or <tt>web.config</tt>. Those connection strings can be set by administrators
using a GUI without knowing about ActiveRecord or NHibernate configuration. Example:
</p>

<pre format="html"><![CDATA[
<configuration>
  <configSections>
      <section name="activerecord"
               type="Castle.ActiveRecord.Framework.Config.ActiveRecordSectionHandler, Castle.ActiveRecord" />
  </configSections>

  <connectionStrings>
      <add name="main" connectionString="Data Source=.;Initial Catalog=test;Integrated Security=SSPI"/>
  </connectionStrings>
  <activerecord>
      <config>
        <add key="connection.driver_class" value="NHibernate.Driver.SqlClientDriver" />
        <add key="dialect" value="NHibernate.Dialect.MsSql2005Dialect" />
        <add key="connection.provider" value="NHibernate.Connection.DriverConnectionProvider" />
        <add key="connection.connection_string_name" value="main" />
      </config>
  </activerecord>
</configuration>
]]></pre>

</intro>

<section id="StandaloneXml">
	<title>Configuration on standalone xml file</title>
	
	<p>
	All that is required in a standalone configuration file is that the <tt>activerecord</tt>
	node be the root element node. For example:
	</p>
	
	<pre format="html"><![CDATA[
<activerecord>
      
    <config>
      <add 
		key="connection.driver_class" 
		value="NHibernate.Driver.SqlClientDriver" />
      <add 
		key="dialect"                 
		value="NHibernate.Dialect.MsSql2000Dialect" />
      <add 
		key="connection.provider"     
		value="NHibernate.Connection.DriverConnectionProvider" />
      <add 
		key="connection.connection_string" 
		value="Data Source=.;Initial Catalog=test;Integrated Security=SSPI" />
	</config>
      
</activerecord>]]></pre>
</section>

<section id="AppDomain">
	<title>AppDomain configuration</title>
	
	<p>
	Every <tt>AppDomain</tt> has a configuration file associated with it. For web application
	the file will be <tt>web.config</tt>. For .net executables it will be the name of the 
	executable file and the sufix <tt>.config</tt>, for example <tt>myapp.exe.config</tt>.
	</p>
	
	<p>
	You can use these files to add a configuration to Castle ActiveRecord. Just make sure you 
	declare a section for it under the <tt>sections</tt> node.
	</p>
	
	<pre format="html"><![CDATA[
<configuration>

    <configSections>
        <section name="activerecord"
                 type="Castle.ActiveRecord.Framework.Config.ActiveRecordSectionHandler, Castle.ActiveRecord" />
    </configSections>

    <activerecord>
      
      <config>
        <add 
			key="connection.driver_class" 
			value="NHibernate.Driver.SqlClientDriver" />
        <add 
			key="dialect"                 
			value="NHibernate.Dialect.MsSql2000Dialect" />
        <add 
			key="connection.provider"     
			value="NHibernate.Connection.DriverConnectionProvider" />
        <add 
			key="connection.connection_string" 
			value="Data Source=.;Initial Catalog=test;Integrated Security=SSPI" />
      </config>
      
    </activerecord>
    
</configuration>]]></pre>
</section>

<section id="Examples">
	<title>Examples per Database</title>
	
	<p>The following sections illustrates some usage of the Xml configuration.
	</p>
	
	<section id="MSSQL">
	<title>Microsoft SQL Server 2000</title>
	
	<pre format="html"><![CDATA[
<activerecord>
      
    <config>
      <add 
		key="connection.driver_class" 
		value="NHibernate.Driver.SqlClientDriver" />
      <add 
		key="dialect"                 
		value="NHibernate.Dialect.MsSql2000Dialect" />
      <add 
		key="connection.provider"     
		value="NHibernate.Connection.DriverConnectionProvider" />
      <add 
		key="connection.connection_string" 
		value="Data Source=.;Initial Catalog=test;Integrated Security=SSPI" />
    </config>
      
</activerecord>	]]>	</pre>
	</section>

	<section id="MSSQL2005">
	<title>Microsoft SQL Server 2005</title>
	
	<pre format="html"><![CDATA[
<activerecord>
      
    <config>
      <add 
		key="connection.driver_class" 
		value="NHibernate.Driver.SqlClientDriver" />
      <add 
		key="dialect"                 
		value="NHibernate.Dialect.MsSql2005Dialect" />
      <add 
		key="connection.provider"     
		value="NHibernate.Connection.DriverConnectionProvider" />
      <add 
		key="connection.connection_string" 
		value="Data Source=.;Initial Catalog=test;Integrated Security=SSPI" />
    </config>
      
</activerecord>	]]>	</pre>
	</section>


	<section id="Oracle">
	<title>Oracle</title>
	
	<pre format="html"><![CDATA[
<activerecord>
      
    <config>
      <add 
		key="connection.driver_class" 
		value="NHibernate.Driver.OracleClientDriver" />
      <add 
		key="dialect"                 
		value="NHibernate.Dialect.OracleDialect" />
      <add 
		key="connection.provider"     
		value="NHibernate.Connection.DriverConnectionProvider" />
      <add 
		key="connection.connection_string" 
		value="Data Source=dm;User ID=dm;Password=dm;" />
    </config>
      
</activerecord>	]]>
	</pre>
	</section>
	
	<section id="MySQL">
	<title>MySQL</title>
	
	<pre format="html"><![CDATA[
<activerecord>
      
    <config>
      <add 
		key="connection.driver_class" 
		value="NHibernate.Driver.MySqlDataDriver" />
      <add 
		key="dialect"                 
		value="NHibernate.Dialect.MySQLDialect" />
      <add 
		key="connection.provider"     
		value="NHibernate.Connection.DriverConnectionProvider" />
      <add 
		key="connection.connection_string" 
		value="Database=test;Data Source=someip;User Id=blah;Password=blah" />
    </config>
      
</activerecord>	]]>
	</pre>
	</section>

	<section id="Firebird">
	<title>Firebird</title>
	
	<pre format="html"><![CDATA[
<activerecord>
      
    <config>
      <add 
		key="connection.driver_class" 
		value="NHibernate.Driver.FirebirdDriver" />
      <add 
		key="dialect"                 
		value="NHibernate.Dialect.FirebirdDialect" />
      <add 
		key="connection.provider"     
		value="NHibernate.Connection.DriverConnectionProvider" />
      <add 
		key="connection.connection_string" 
		value="Server=localhost;Database=d:\db.fdb;User=name;password=masterkey;ServerType=1;Pooling=false" />
      <add 
		key="query.substitutions"     
		value="true 1, false 0" />
    </config>
      
</activerecord>	]]>
	</pre>
	</section>

	<section id="PostgreSQL">
	<title>PostgreSQL </title>
	
	<pre format="html"><![CDATA[
<activerecord>
      
    <config>
      <add 
		key="connection.driver_class" 
		value="NHibernate.Driver.NpgsqlDriver" />
      <add 
		key="dialect"                 
		value="NHibernate.Dialect.PostgreSQLDialect" />
      <add 
		key="connection.provider"     
		value="NHibernate.Connection.DriverConnectionProvider" />
      <add 
		key="connection.connection_string" 
		value="Server=localhost;initial catalog=nhibernate;User ID=nhibernate;Password=nhibernate;" />
    </config>
      
</activerecord>	]]>
	</pre>
	</section>

</section>


<section>
	<title>See also</title>

	<p>
	Check the User's guide 
	<a href="../usersguide/configref.html">Configuration and Initialization</a>
	article.
	</p>
	
</section>

</body>
</document>
