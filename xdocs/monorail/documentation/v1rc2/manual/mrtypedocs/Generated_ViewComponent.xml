<?xml version="1.0"?>
<document order="3">
  <properties>
    <title>ViewComponent API Document</title>
  </properties>

  <body>

<intro>
<p>
 Base class for UI Components 
</p>
</intro>

<section id="ViewComponent_Constructors">
	<title>Constructors</title>

	<section id="ViewComponent_Constructors1">
	<title>ViewComponent()</title>
<p>
Initializes a new instance of the <tt>Castle.MonoRail.Framework.ViewComponent</tt> class.
</p>


	</section>
</section>


<section id="ViewComponent_Properties">
	<title>Properties</title>

	<p>
	<table class="commontable">
	<tr>
		<th>Name</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><tt>Context</tt></td>
		<td align="center"><tt>IViewComponentContext</tt></td>
		<td>
 Gets the Component Context 
		</td>
	</tr>
	<tr>
		<td><tt>RailsContext</tt></td>
		<td align="center"><tt>IRailsEngineContext</tt></td>
		<td>
 Gets the <tt>Castle.MonoRail.Framework.IRailsEngineContext</tt> associated with the current request 
		</td>
	</tr>
	<tr>
		<td><tt>ComponentParams</tt></td>
		<td align="center"><tt>IDictionary</tt></td>
		<td>
 Gets the component parameters 
		</td>
	</tr>
	<tr>
		<td><tt>Session</tt></td>
		<td align="center"><tt>IDictionary</tt></td>
		<td>
 Gets the Session dictionary. 
		</td>
	</tr>
	<tr>
		<td><tt>Flash</tt></td>
		<td align="center"><tt>Flash</tt></td>
		<td>
 Gets a dictionary of volative items. Ideal for showing success and failures messages. 
		</td>
	</tr>
	<tr>
		<td><tt>HttpContext</tt></td>
		<td align="center"><tt>HttpContext</tt></td>
		<td>
 Gets the web context of ASP.NET API. 
		</td>
	</tr>
	<tr>
		<td><tt>Request</tt></td>
		<td align="center"><tt>IRequest</tt></td>
		<td>
 Gets the request object. 
		</td>
	</tr>
	<tr>
		<td><tt>Response</tt></td>
		<td align="center"><tt>IResponse</tt></td>
		<td>
 Gets the response object. 
		</td>
	</tr>
	<tr>
		<td><tt>PropertyBag</tt></td>
		<td align="center"><tt>IDictionary</tt></td>
		<td>
 Provides a way to make data available to the view that the component uses 
		</td>
	</tr>
	<tr>
		<td><tt>Params</tt></td>
		<td align="center"><tt>NameValueCollection</tt></td>
		<td>
 Shortcut to Request.Params 
		</td>
	</tr>
	</table>
	</p>

</section>




<section id="ViewComponent_Methods">
	<title>Methods</title>

	<section id="ViewComponent_Methods1">
	<title>SupportsSection(String name) 
: Boolean
</title>

<p>
 Implementor should return true only if the <tt>name</tt> is a known section the view component supports. 
</p>



	<p>
	<table class="commontable">
	<tr>
		<th>Parameter</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><tt>name</tt></td>
		<td>
section being added
		</td>
	</tr>
	</table>
	</p>
	</section>
	<section id="ViewComponent_Methods2">
	<title>Render() 
</title>

<p>
 Called by the framework so the component can render its content 
</p>



	</section>
	<section id="ViewComponent_Methods3">
	<title>Initialize() 
</title>

<p>
 Called by the framework once the component instance is initialized 
</p>



	</section>
	<section id="ViewComponent_Methods4">
	<title>Init(IRailsEngineContext railsContext, IViewComponentContext context) 
</title>

<p>
 Invoked by the framework. 
</p>



	<p>
	<table class="commontable">
	<tr>
		<th>Parameter</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><tt>railsContext</tt></td>
		<td>

		</td>
	</tr>
	<tr>
		<td><tt>context</tt></td>
		<td>

		</td>
	</tr>
	</table>
	</p>
	</section>
	<section id="ViewComponent_Methods5">
	<title>RenderView(String name) 
</title>

<p>
 Specifies the view to be processed after the component has finished its processing. 
</p>



	<p>
	<table class="commontable">
	<tr>
		<th>Parameter</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><tt>name</tt></td>
		<td>
Missing documentation
		</td>
	</tr>
	</table>
	</p>
	</section>
	<section id="ViewComponent_Methods6">
	<title>RenderView(String component, String name) 
</title>

<p>
 Specifies the view to be processed after the component has finished its processing. 
</p>



	<p>
	<table class="commontable">
	<tr>
		<th>Parameter</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><tt>component</tt></td>
		<td>
Missing documentation
		</td>
	</tr>
	<tr>
		<td><tt>name</tt></td>
		<td>
Missing documentation
		</td>
	</tr>
	</table>
	</p>
	</section>
	<section id="ViewComponent_Methods7">
	<title>RenderSharedView(String name) 
</title>

<p>
 Specifies the shared view to be processed after the component has finished its processing. (A partial view shared by others views and usually in the root folder of the view directory). 
</p>



	<p>
	<table class="commontable">
	<tr>
		<th>Parameter</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><tt>name</tt></td>
		<td>
Missing documentation
		</td>
	</tr>
	</table>
	</p>
	</section>
	<section id="ViewComponent_Methods8">
	<title>CancelView() 
</title>

<p>
 Cancels the view processing. 
</p>



	</section>
	<section id="ViewComponent_Methods9">
	<title>RenderText(String content) 
</title>

<p>
Missing summary
</p>



	<p>
	<table class="commontable">
	<tr>
		<th>Parameter</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><tt>content</tt></td>
		<td>
Missing documentation
		</td>
	</tr>
	</table>
	</p>
	</section>
</section>

</body>
</document>
