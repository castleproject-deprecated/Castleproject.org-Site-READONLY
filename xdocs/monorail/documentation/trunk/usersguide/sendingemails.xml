<?xml version="1.0"?>
<document order="30">
  <properties>
    <title>Sending e-mails</title>
  </properties>

  <body>

<intro>
<p>
It is easy to send emails using MonoRail 
combining templates as you do with the views. Layouts are 
not applied to e-mail templates, though.
</p>

<download relative="!download/monorail/trunk/MonoRail.SendingEmailSample.zip" filename="MonoRail.SendingEmailSample.zip"/>

</intro>

<section>
	<title>How it works</title>
	
	<p>
	First you have to configure the smtp host address. 
	See <a href="../manual/configurationref.html">MonoRail Configuration Reference</a>
	</p>

	<p>
	The most manual way to send an email is to configure 
	a <tt>Castle.Components.Common.EmailSender.Message</tt>
	instance and invoke <tt>DeliverEmail</tt> which is exposed
	by the <tt>Controller</tt> class.
	</p>
	
	<p>
	A better way is to externalize the configuration of the <tt>Message</tt>.
	You can do that by creating view templates on the <tt>mail</tt>
	folder under your <tt>views</tt> directory.
	You can even add headers like from, to and subject to the template. 
	They will be used to properly set up the <tt>Message</tt> instance.
	The rest of the view template will be treated as the e-mail body.
	If the body starts with an &lt;html&gt; tag, the <tt>Message</tt>
	format will be changed to Html.
	</p>
	
	<p>
	The method <tt>RenderMailMessage</tt> can be used to create a configured
	<tt>Message</tt> instance based on the specified template. It gives
	you a chance to modify the message before sending it with <tt>DeliverEmail</tt>.
	</p>

	<p>
	The method <tt>RenderEmailAndSend</tt> is a combination of the methods above.
	It creates the <tt>Message</tt> instance and sends it.
	</p>	

</section>

</body>
</document>
