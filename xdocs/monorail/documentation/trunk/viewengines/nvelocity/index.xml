<?xml version="1.0"?>
<document order="0">
  <properties>
    <title>NVelocity View Engine</title>
  </properties>

<body>

<intro>
<p>
The NVelocity View Engine uses <a relative="others/nvelocity/index.html">NVelocity</a>
</p>

<p>
Frequently Asked Questions on NVelocity View Engine can be
found on the standard <a relative="monorail/faq.html">MonoRail FAQ</a>.
</p>

</intro>

<section>
	<title>NVelocity files</title>

	<p>
	NVelocity uses the extension <tt>.vm</tt> so just create your views
	with that extension. Remember that from your controller you should not
	reference file extensions when defining views to render.
	</p>
	
</section>

<section>
	<title>Layouts</title>

	<p>Use <tt>$childContent</tt> context variable to render the content of the view on the layout template.
	The following is a simple layout using NVelocity:</p>
	
	<pre format="html">
	<![CDATA[
<html>

Welcome

$childContent

Footer

</html>
	]]></pre>
	
	<note>
	<p>
	The view template selected by the controller is executed before the 
	layout template. In fact the layout template is merged with the result
	of the view template execution. 
	</p>
	</note>
	
</section>

<section>
	<title>Configuring NVelocity</title>

	<p>
	The NVelocity View Engine looks for a file <tt>nvelocity.properties</tt>
	in the root of the view folder. You can use this file 
	to configure how NVelocity should behave. 
	</p>

	<p>
	For example, to configure NVelocity to support Chinese enconding
	create a text file named <tt>nvelocity.properties</tt>, save it 
	to your views folder and add the following content:
	</p>
	
<pre>
input.encoding=GB2312
output.encoding=GB2312
</pre>

	<p>
	More information on the entries can be found on the original 
	Velocity documentation.
	</p>

</section>

<section>
	<title>Macros</title>

	<p>
	The NVelocity supports macro, and have in mind
	they have problems. If you want to use macros you can 
	create a folder <tt>macros</tt> under the your views root folder
	</p>

	<p>
	All <tt>.vm</tt> files in this folder will be loaded 
	as NVelocity Macro library so the macros will be
	available to all templates.
	</p>
	
</section>

<section>
	<title>WebForms vs NVelocity</title>

<p>
There is a common FUD in moving from WebForms to NVelocity.
NVelocity promotes a better separation of concerns than 
WebForms (the issues with WebForms are stated in the Asp.Net View Engine document).
</p>

<p>
So try NVelocity View Engine with a small project that demands common 
tasks like pagination, authentication and make your own conclusions.
</p>

</section>


</body>

</document>
