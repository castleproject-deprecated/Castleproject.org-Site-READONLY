<?xml version="1.0"?>
<document order="3">
  <properties>
    <title>Configuring</title>
  </properties>

<body>

<intro>

	<p>
The default configuration should suffice for most cases, but if you want to 
change the configuration, you can do so by adding a configuration section 
handler to the web.config file:
</p>

<pre format="html">
&lt;configSections&gt;
  &lt;section name=&quot;Brail&quot; type=&quot;Brail.BrailConfigurationSection, Brail&quot; /&gt;
&lt;/configSections&gt;
</pre>

<p>Here is the default configuration for Brail:</p>

<pre format="html">
&lt;Brail
	debug=&quot;false&quot;
	saveToDisk=&quot;false&quot;
	saveDirectory=&quot;Brail_Generated_Code&quot;
	batch=&quot;true&quot;
	commonScriptsDirectory=&quot;CommonScripts&quot;&gt;

	&lt;reference assembly=&quot;My.Assembly.Name&quot;/&gt;
&lt;/Brail&gt;
</pre>

<table class="commontable">
	<tr>
		<th colspan="2">Option:</th>
		<th width="17%">Default Value:</th>
		<th width="27%">Possible values:</th>
	</tr>
	<tr>
		<td width="16%">debug</td><td width="39%" valign="top">Generate debug or retail code</td><td width="17%" valign="top">false</td><td width="27%" valign="top">true - generate debug code<br/>
		false - generate retial code</td></tr><tr>
		<td width="16%">saveToDisk</td><td width="39%" valign="top">Save the generated assemblies to disk - useful if you 
		want to know what is going on behind the scenes.</td><td width="17%" valign="top">false</td><td width="27%" valign="top">true - save assemblies to disk<br/>
		false - use entirely in memory</td></tr><tr>
		<td width="16%">saveDirectory</td><td width="39%" valign="top">The directory to save the generated assemblies to.<br/>
		The path can be relative or absolute, if relative, the default ASP.Net 
		bin path will be used.<br/>
		If the directory does not exist, it will be created.</td><td width="17%" valign="top">&quot;Brail_Generated_Code&quot;</td><td width="27%" valign="top">Any valid path</td></tr><tr>
		<td width="16%">batch</td><td width="39%" valign="top">Batch compilation, compile all the scripts in one folder 
		to a single assembly.<br/>
		This does not work recursively.</td><td width="17%" valign="top">true</td><td width="27%" valign="top">true - all scripts in a folder will be compiled to a 
		single assembly<br/>
		false - each script will be compiled to its own assembly</td></tr><tr>
		<td width="16%">commonScriptsDirectory </td>
		<td width="39%" valign="top">The directory where all the common scripts are. This can 
		be a relative or absolute path, if relative, the Views directory of the 
		application will be used as the base.<br/>
		If the directory does not exist, it will <i>not</i> be created.</td><td width="17%" valign="top">&quot;CommonScripts&quot;</td><td width="27%" valign="top">Any valid path</td></tr><tr>
		<td width="16%">reference element, assembly attribute</td><td width="39%" valign="top">This tells Brails that all your scripts 
		should reference the specified assembly or assemblies. This allows strong typing 
		in the views and avoids the cost of reflection.</td><td width="17%" valign="top">none</td><td width="27%" valign="top">The 
		assembly attribute must contain a valid assembly name that is reachable 
		to the application by using <tt>Assembly.Load()</tt>. Usually this means that 
		it's located in the <tt>bin</tt> directory of the application.
		</td></tr>
		<tr>
		<td width="16%">import element, namespace attribute</td>
		<td width="39%" valign="top">This tells Brails that all your scripts should import the specified namespace or namespaces. This allows shorter naming in the script.</td>
		<td width="17%" valign="top">none</td>
		<td width="27%" valign="top">Any valid namespace</td>
		</tr>
</table>

</intro>

</body>

</document>
