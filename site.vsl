<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
#macro(panels $panelsNode)
<div class="panels">
<ul class="options">
#foreach($atttitle in $panelsNode.SelectNodes("panel/@title"))
	<li class="option"><span>$atttitle.Value</span></li>
#end
</ul>
#foreach($panel in $panelsNode.SelectNodes("panel"))
##todo first one must be active, the rest inactive
<div class="panel">
#outputcontent($panel)
</div>
#end
</div>
#end
#macro(warningbox $contentNode)
<div class="warning">
<div class="warningtopbg">
<div class="warningborderleft">
<div class="warningborderright">
<div class="warningtopleft">
<div class="warningtopright">
<div class="warningbottomleft">
<div class="warningbottomright">
	<div class="boxtitle">Warning</div>
<div class="innercontent">
$contentNode.InnerXml
</div></div></div></div></div></div></div></div></div>
#end

#macro(notebox $contentNode)
<div class="note">
<div class="notetopbg">
<div class="noteborderleft">
<div class="noteborderright">
<div class="notetopleft">
<div class="notetopright">
<div class="notebottomleft">
<div class="notebottomright">
<div class="boxtitle">Quick Note</div>
<div class="innercontent">
$contentNode.InnerXml
</div></div></div></div></div></div></div></div></div>
#end

#macro(downloadbox $contentNode)
#set($src = $contentNode.GetAttribute("src"))
#set($filename = $contentNode.GetAttribute("filename"))
#set($filesize = $contentNode.GetAttribute("filesize"))
#set($relative = $contentNode.GetAttribute("relative"))
<div class="download">
<div class="downloadborderleft">
<div class="downloadborderright">
<div class="filename">
<a href="$src">$filename</a> ($helper.FileSizeInKBytes($basefolder, $relative)k)
#if($filesize != "")($filesize)<br/>#end
</div>
</div></div></div>
#end

#macro(getrelativelevel)
#foreach($it in [1..$folder.Level])
#if($velocityCount == 1)./#else../#end
#end
#end
###
### Macro metaauthor(author, email)
###
#macro(metaauthor $author $email)
<meta name="author" content="$author" />
<meta name="email" content="$email" />
#end
##
## Macro recursiveSiteMap(node path)
##
#macro(recursiveSiteMap $node $path $offset)
#set($levelstr = $node.GetAttribute("level"))
#set($level = $converter.ToInt($levelstr) - $offset)
#set($page = $node.GetAttribute("page"))
#if($node.HasAttribute("path"))
#set($nodepath = $node.GetAttribute("path"))
#else
#if($node.ParentNode.HasAttribute("path"))
#set($nodepath = $node.ParentNode.GetAttribute("path"))
#else
#set($nodepath = $node.ParentNode.ParentNode.GetAttribute("path"))
#end
#end

#if($node.GetAttribute("issubpage") == "true")
    <li class="liOpen">
	<i><a href="$helper.Relativize($path,$nodepath,$page)">$node.GetAttribute("title")</a></i>
#if($node.ChildNodes.Count > 0)
<ul>
#foreach($node in $node.ChildNodes)
#recursiveSiteMap($node $path $offset)
#end
</ul>
#end
	</li>
#elseif($node.Name == "section")
#if($node.HasAttribute("id"))
    <li class="liOpen">
	<a href="$helper.Relativize($path,$nodepath,$page)#$node.GetAttribute("id")">
	$node.GetAttribute("title")
	</a>
#if($node.ChildNodes.Count > 0)
<ul>
#foreach($node in $node.ChildNodes)
#recursiveSiteMap($node $path $offset)
#end
</ul>
#end
	</li>
#end
#else
	<li class="liOpen">
<strong><a href="$helper.Relativize($path,$nodepath,$page)">$node.GetAttribute("title")</a></strong>
#if($node.ChildNodes.Count > 0)
<ul>
#foreach($node in $node.ChildNodes)
#recursiveSiteMap($node $path $offset)
#end
</ul>
#end
	</li>
#end
#end

##
## Macro buildsitemap(sitemapElement)
##
#macro(buildsitemap $elem)
#set($path = $elem.GetAttribute("select"))
#set($selNode = $sitemap.SelectSingleNode($path))
#set($offset = $helper.GetLevels($path))
#set($newpath = $folder.path)
<div class="sitemap">
<ul class="mktree" id="tree1">
#recursiveSiteMap($selNode $newpath $offset)
</ul>
</div>
#end

##
## Macro outputcontent(childNodes)
##
#macro(outputcontent $nodes)
#foreach($elem in $nodes)
#if($elem.Name == "title")
  <h${level}>$elem.InnerXml</h${level}>
#elseif($elem.Name == "sitemap")
  #buildsitemap($elem)
#elseif($elem.Name == "p")
  <p>$elem.InnerXml</p>
#elseif($elem.Name == "panels")
  #panels($elem)
#elseif($elem.Name == "warning")
  #warningbox($elem)
#elseif($elem.Name == "note")
  #notebox($elem)
#elseif($elem.Name == "download")
  #downloadbox($elem)
#elseif($elem.Name == "pre")
#set($format = $elem.GetAttribute("format"))
#if($format == "")
  <pre class="commonpre">
  $elem.InnerXml
  </pre>
#else
  #if($format == "cs")
  $cs.FormatCode( $elem.InnerText )
  #elseif($format == "html")
  $html.FormatCode( $elem.InnerText )
  #elseif($format == "js")
  $js.FormatCode( $elem.InnerText )
  #elseif($format == "tsql")
  $tsql.FormatCode( $elem.InnerText )
  #elseif($format == "vb")
  $vb.FormatCode( $elem.InnerText )
  #end
#end
#end
#end
#end

##
## Macro section
##
#macro(section $content $stack)
#set($level = $helper.Push($stack))
#if($content.GetAttribute("id") != "")
<a name="$content.GetAttribute("id")"></a>
#end
#set($nodes = $content.ChildNodes)
#outputcontent($nodes)
#foreach($section in $content.SelectNodes("section"))
#section($section $stack)
#end
#set($garbage = $helper.Pop($stack))
#end

##
## Macro createGroup(group)
##
#macro(createGroup $group)
#set($groupType = $group.GetAttribute("type"))
#set($menus = $group.selectNodes("menu"))
  <div class="${groupType}menu">
    <div class="${groupType}menucontent">
#foreach($menu in $menus)
#set($title = $menu.get_Item("title"))
<span class="menutitle">
#if($title.HasAttribute("abspath"))
<a href="#getrelativelevel()$title.GetAttribute('abspath')">$title.InnerXml</a>
#else
$title.InnerXml
#end
</span>
  <ul>
#set($items = $menu.selectNodes("li"))
#foreach($item in $items)
<li>
#if($item.HasAttribute("abspath"))
<a href="#getrelativelevel()$item.GetAttribute('abspath')">$item.InnerXml</a>
#else
$item.InnerXml
#end
</li>
#end
  </ul>
#if($menus.size() > 1)<br/>#end
#end
    </div>
  </div>
  <br/>
#end
##
#macro(createMenu)
#set($groups = $navigation.SelectNodes("project/body/group"))
#foreach($group in $groups)
#createGroup($group)
#end
#end
##
#macro(document)
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
		<title>$root.get_Item("properties").get_Item("title").FirstChild.Value :: $project.SelectSingleNode("title").FirstChild.Value</title>
		<link rel="stylesheet" href="$relativePath/base.css" />
		<link rel="stylesheet" href="$relativePath/elem.css" />
		<link rel="stylesheet" href="$relativePath/csharp.css" />
		<script language="javascript" src="$relativePath/mktree.js"></script>
	</head>

	<body>

<div id="container">

  <div id="topbuttonscontainer"></div>

  <div id="maintitle">
    <h1> <a href="/" title="Home" accesskey="1">Home</a> </h1>
  </div>

  <div id="mainbar">
    <div id="mainbarleft"><div id="mainbarright"></div></div>
  </div>
  
  <div id="page">
		<div id="sidebar" >
#createMenu()
			<br/>
		</div>
		
		<div id="content">
#set($localimg = $navigation.SelectSingleNode("project/localimage"))
#if($localimg)
		<div class="callout-pic"><img src="$relativePath/$localimg.FirstChild.Value" /></div>
#end

		<h1 class="firstHeading">
		    $root.SelectSingleNode("properties").SelectSingleNode("title").FirstChild.Value
		</h1> 
	
#set($bcount = $breadcrumbs.Count)
#if($bcount > 1)
<div class="breadcrumbs">
#foreach($b in $breadcrumbs)
&raquo;
#if ($velocityCount == $bcount)
<u>$b.Title</u>
#else
	<a href="#getrelativelevel()$helper.RemoveOffset("castle/", $b.RelativePath)">$b.Title</a> 
#end
#end
</div>
#end

		<!-- start content -->

#set($introElem = $root.SelectSingleNode("body").SelectSingleNode("intro"))	
#if($introElem)
#set($nodes = $introElem.ChildNodes)
#outputcontent($nodes)
#end
		
#set($allSections = $root.SelectSingleNode("body").SelectNodes("section"))
#foreach($section in $allSections)
#set($stack = $helper.CreateStack())
#section($section $stack)
#end
		
		<!-- end content -->
		
	<div id="footer">

	Found an error? Something inaccurate? <a href="">Help us improve the documentation</a> <br/>
	Generated by <a href="">Castle Anakia</a>

	</div>

	&nbsp;
	<br/>

		</div> <!-- end of content -->
  </div><!-- end of page -->
  
</div>

	</body>
</html>
#end

#document()
